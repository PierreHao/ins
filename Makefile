#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = -I${HOME}/local/include
CFLAGS = -std=c++11 -fopenmp `pkg-config --cflags opencv`
RESINC = 
LIBDIR = -L${HOME}/local/lib
LIB = ../alphautils/libalphautils.a -lopencv_stitching -lopencv_videostab -lopencv_gpu -lopencv_legacy -lopencv_ts -lopencv_nonfree -lopencv_contrib -lopencv_calib3d -lopencv_objdetect -lopencv_features2d -lopencv_video -lopencv_photo -lopencv_highgui -lopencv_flann -lopencv_imgproc -lopencv_ml -lopencv_core -lflann -lflann_cpp -llapack ../ransac/libransac.a
LDFLAGS = `pkg-config --libs opencv` -lransac `pkg-config --libs lapack` -lgomp -lrt -lpthread -ldl

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -Wall -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = obj/Debug
DEP_DEBUG = 
OUT_DEBUG = ./libins.a

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -march=corei7 -O3 -Wall
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = ./libins.a

OBJ_DEBUG = $(OBJDIR_DEBUG)/math/vector.o $(OBJDIR_DEBUG)/qb.o $(OBJDIR_DEBUG)/qe.o $(OBJDIR_DEBUG)/quantizer.o $(OBJDIR_DEBUG)/retr/pooling.o $(OBJDIR_DEBUG)/utils.o $(OBJDIR_DEBUG)/gvp.o $(OBJDIR_DEBUG)/compat.o $(OBJDIR_DEBUG)/core.o $(OBJDIR_DEBUG)/core/mask.o $(OBJDIR_DEBUG)/dataset_info.o $(OBJDIR_DEBUG)/bow.o $(OBJDIR_DEBUG)/homography.o $(OBJDIR_DEBUG)/ins_param.o $(OBJDIR_DEBUG)/invert_index.o $(OBJDIR_DEBUG)/kp_dumper.o

OBJ_RELEASE = $(OBJDIR_RELEASE)/math/vector.o $(OBJDIR_RELEASE)/qb.o $(OBJDIR_RELEASE)/qe.o $(OBJDIR_RELEASE)/quantizer.o $(OBJDIR_RELEASE)/retr/pooling.o $(OBJDIR_RELEASE)/utils.o $(OBJDIR_RELEASE)/gvp.o $(OBJDIR_RELEASE)/compat.o $(OBJDIR_RELEASE)/core.o $(OBJDIR_RELEASE)/core/mask.o $(OBJDIR_RELEASE)/dataset_info.o $(OBJDIR_RELEASE)/bow.o $(OBJDIR_RELEASE)/homography.o $(OBJDIR_RELEASE)/ins_param.o $(OBJDIR_RELEASE)/invert_index.o $(OBJDIR_RELEASE)/kp_dumper.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	test -d . || mkdir -p .
	test -d $(OBJDIR_DEBUG)/math || mkdir -p $(OBJDIR_DEBUG)/math
	test -d $(OBJDIR_DEBUG) || mkdir -p $(OBJDIR_DEBUG)
	test -d $(OBJDIR_DEBUG)/retr || mkdir -p $(OBJDIR_DEBUG)/retr
	test -d $(OBJDIR_DEBUG)/core || mkdir -p $(OBJDIR_DEBUG)/core

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(AR) rcs $(OUT_DEBUG) $(OBJ_DEBUG)

$(OBJDIR_DEBUG)/math/vector.o: math/vector.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c math/vector.cpp -o $(OBJDIR_DEBUG)/math/vector.o

$(OBJDIR_DEBUG)/qb.o: qb.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c qb.cpp -o $(OBJDIR_DEBUG)/qb.o

$(OBJDIR_DEBUG)/qe.o: qe.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c qe.cpp -o $(OBJDIR_DEBUG)/qe.o

$(OBJDIR_DEBUG)/quantizer.o: quantizer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c quantizer.cpp -o $(OBJDIR_DEBUG)/quantizer.o

$(OBJDIR_DEBUG)/retr/pooling.o: retr/pooling.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c retr/pooling.cpp -o $(OBJDIR_DEBUG)/retr/pooling.o

$(OBJDIR_DEBUG)/utils.o: utils.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c utils.cpp -o $(OBJDIR_DEBUG)/utils.o

$(OBJDIR_DEBUG)/gvp.o: gvp.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c gvp.cpp -o $(OBJDIR_DEBUG)/gvp.o

$(OBJDIR_DEBUG)/compat.o: compat.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c compat.cpp -o $(OBJDIR_DEBUG)/compat.o

$(OBJDIR_DEBUG)/core.o: core.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c core.cpp -o $(OBJDIR_DEBUG)/core.o

$(OBJDIR_DEBUG)/core/mask.o: core/mask.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c core/mask.cpp -o $(OBJDIR_DEBUG)/core/mask.o

$(OBJDIR_DEBUG)/dataset_info.o: dataset_info.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c dataset_info.cpp -o $(OBJDIR_DEBUG)/dataset_info.o

$(OBJDIR_DEBUG)/bow.o: bow.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c bow.cpp -o $(OBJDIR_DEBUG)/bow.o

$(OBJDIR_DEBUG)/homography.o: homography.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c homography.cpp -o $(OBJDIR_DEBUG)/homography.o

$(OBJDIR_DEBUG)/ins_param.o: ins_param.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c ins_param.cpp -o $(OBJDIR_DEBUG)/ins_param.o

$(OBJDIR_DEBUG)/invert_index.o: invert_index.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c invert_index.cpp -o $(OBJDIR_DEBUG)/invert_index.o

$(OBJDIR_DEBUG)/kp_dumper.o: kp_dumper.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c kp_dumper.cpp -o $(OBJDIR_DEBUG)/kp_dumper.o

clean_debug: 
	rm -f $(OBJ_DEBUG) $(OUT_DEBUG)
	#rm -rf .
	rm -rf $(OBJDIR_DEBUG)/math
	rm -rf $(OBJDIR_DEBUG)
	rm -rf $(OBJDIR_DEBUG)/retr
	rm -rf $(OBJDIR_DEBUG)/core

before_release: 
	test -d . || mkdir -p .
	test -d $(OBJDIR_RELEASE)/math || mkdir -p $(OBJDIR_RELEASE)/math
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)
	test -d $(OBJDIR_RELEASE)/retr || mkdir -p $(OBJDIR_RELEASE)/retr
	test -d $(OBJDIR_RELEASE)/core || mkdir -p $(OBJDIR_RELEASE)/core

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(AR) rcs $(OUT_RELEASE) $(OBJ_RELEASE)

$(OBJDIR_RELEASE)/math/vector.o: math/vector.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c math/vector.cpp -o $(OBJDIR_RELEASE)/math/vector.o

$(OBJDIR_RELEASE)/qb.o: qb.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c qb.cpp -o $(OBJDIR_RELEASE)/qb.o

$(OBJDIR_RELEASE)/qe.o: qe.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c qe.cpp -o $(OBJDIR_RELEASE)/qe.o

$(OBJDIR_RELEASE)/quantizer.o: quantizer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c quantizer.cpp -o $(OBJDIR_RELEASE)/quantizer.o

$(OBJDIR_RELEASE)/retr/pooling.o: retr/pooling.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c retr/pooling.cpp -o $(OBJDIR_RELEASE)/retr/pooling.o

$(OBJDIR_RELEASE)/utils.o: utils.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c utils.cpp -o $(OBJDIR_RELEASE)/utils.o

$(OBJDIR_RELEASE)/gvp.o: gvp.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c gvp.cpp -o $(OBJDIR_RELEASE)/gvp.o

$(OBJDIR_RELEASE)/compat.o: compat.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c compat.cpp -o $(OBJDIR_RELEASE)/compat.o

$(OBJDIR_RELEASE)/core.o: core.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c core.cpp -o $(OBJDIR_RELEASE)/core.o

$(OBJDIR_RELEASE)/core/mask.o: core/mask.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c core/mask.cpp -o $(OBJDIR_RELEASE)/core/mask.o

$(OBJDIR_RELEASE)/dataset_info.o: dataset_info.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c dataset_info.cpp -o $(OBJDIR_RELEASE)/dataset_info.o

$(OBJDIR_RELEASE)/bow.o: bow.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c bow.cpp -o $(OBJDIR_RELEASE)/bow.o

$(OBJDIR_RELEASE)/homography.o: homography.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c homography.cpp -o $(OBJDIR_RELEASE)/homography.o

$(OBJDIR_RELEASE)/ins_param.o: ins_param.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c ins_param.cpp -o $(OBJDIR_RELEASE)/ins_param.o

$(OBJDIR_RELEASE)/invert_index.o: invert_index.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c invert_index.cpp -o $(OBJDIR_RELEASE)/invert_index.o

$(OBJDIR_RELEASE)/kp_dumper.o: kp_dumper.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c kp_dumper.cpp -o $(OBJDIR_RELEASE)/kp_dumper.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	#rm -rf .
	rm -rf $(OBJDIR_RELEASE)/math
	rm -rf $(OBJDIR_RELEASE)
	rm -rf $(OBJDIR_RELEASE)/retr
	rm -rf $(OBJDIR_RELEASE)/core

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

